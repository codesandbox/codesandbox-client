{"contents":{"/node_modules/@dnd-kit/utilities/dist/utilities.esm.js":{"content":"import { useMemo, useLayoutEffect, useEffect, useRef, useCallback } from 'react';\n\nfunction useCombinedRefs(...refs) {\n  return useMemo(() => node => {\n    refs.forEach(ref => ref(node));\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  refs);\n}\n\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nconst canUseDOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\r\n * A hook that resolves to useEffect on the server and useLayoutEffect on the client\r\n * @param callback {function} Callback function that is invoked when the dependencies of the hook change\r\n */\n\nconst useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n\nfunction useInterval() {\n  const intervalRef = useRef(null);\n  const set = useCallback((listener, duration) => {\n    intervalRef.current = setInterval(listener, duration);\n  }, []);\n  const clear = useCallback(() => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n  return [set, clear];\n}\n\nfunction useLazyMemo(callback, dependencies) {\n  const valueRef = useRef();\n  return useMemo(() => {\n    const newValue = callback(valueRef.current);\n    valueRef.current = newValue;\n    return newValue;\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [...dependencies]);\n}\n\nfunction useNodeRef() {\n  const node = useRef(null);\n  const setNodeRef = useCallback(element => {\n    node.current = element;\n  }, []);\n  return [node, setNodeRef];\n}\n\nlet ids = {};\nfunction useUniqueId(prefix, value) {\n  return useMemo(() => {\n    if (value) {\n      return value;\n    }\n\n    const id = ids[prefix] == null ? 0 : ids[prefix] + 1;\n    ids[prefix] = id;\n    return `${prefix}-${id}`;\n  }, [prefix, value]);\n}\n\nfunction createAdjustmentFn(modifier) {\n  return (object, ...adjustments) => {\n    return adjustments.reduce((accumulator, adjustment) => {\n      const entries = Object.entries(adjustment);\n\n      for (const [key, valueAdjustment] of entries) {\n        const value = accumulator[key];\n\n        if (value != null) {\n          accumulator[key] = value + modifier * valueAdjustment;\n        }\n      }\n\n      return accumulator;\n    }, { ...object\n    });\n  };\n}\n\nconst add = /*#__PURE__*/createAdjustmentFn(1);\nconst subtract = /*#__PURE__*/createAdjustmentFn(-1);\n\nconst CSS = /*#__PURE__*/Object.freeze({\n  Translate: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n\n      const {\n        x,\n        y\n      } = transform;\n      return `translate3d(${x ? Math.round(x) : 0}px, ${y ? Math.round(y) : 0}px, 0)`;\n    }\n\n  },\n  Scale: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n\n      const {\n        scaleX,\n        scaleY\n      } = transform;\n      return `scaleX(${scaleX}) scaleY(${scaleY})`;\n    }\n\n  },\n  Transform: {\n    toString(transform) {\n      if (!transform) {\n        return;\n      }\n\n      return [CSS.Translate.toString(transform), CSS.Scale.toString(transform)].join(' ');\n    }\n\n  },\n  Transition: {\n    toString({\n      property,\n      duration,\n      easing\n    }) {\n      return `${property} ${duration}ms ${easing}`;\n    }\n\n  }\n});\n\nexport { CSS, add, canUseDOM, subtract, useCombinedRefs, useInterval, useIsomorphicLayoutEffect, useLazyMemo, useNodeRef, useUniqueId };\n//# sourceMappingURL=utilities.esm.js.map\n","isModule":true,"requires":["react"]},"/node_modules/@dnd-kit/utilities/package.json":{"content":"{\"name\":\"@dnd-kit/utilities\",\"version\":\"2.0.0\",\"description\":\"Internal utilities to bee shared between `@dnd-kit` packages\",\"author\":\"Claud√©ric Demers\",\"license\":\"MIT\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/clauderic/dnd-kit.git\",\"directory\":\"packages/utilities\"},\"scripts\":{\"start\":\"tsdx watch --tsconfig tsconfig.build.json --verbose --noClean\",\"build\":\"tsdx build --tsconfig tsconfig.build.json\",\"test\":\"tsdx test\",\"lint\":\"tsdx lint\",\"prepublish\":\"npm run build\"},\"main\":\"dist/index.js\",\"module\":\"dist/utilities.esm.js\",\"typings\":\"dist/index.d.ts\",\"files\":[\"README.md\",\"CHANGELOG.md\",\"LICENSE\",\"dist\"],\"dependencies\":{\"tslib\":\"^2.0.0\"},\"publishConfig\":{\"access\":\"public\"}}"},"/node_modules/tslib/package.json":{"content":"{\"name\":\"tslib\",\"author\":\"Microsoft Corp.\",\"homepage\":\"https://www.typescriptlang.org/\",\"version\":\"2.2.0\",\"license\":\"0BSD\",\"description\":\"Runtime library for TypeScript helper functions\",\"keywords\":[\"TypeScript\",\"Microsoft\",\"compiler\",\"language\",\"javascript\",\"tslib\",\"runtime\"],\"bugs\":{\"url\":\"https://github.com/Microsoft/TypeScript/issues\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/Microsoft/tslib.git\"},\"main\":\"tslib.js\",\"module\":\"tslib.es6.js\",\"jsnext:main\":\"tslib.es6.js\",\"typings\":\"tslib.d.ts\",\"sideEffects\":false,\"exports\":{\".\":{\"module\":\"./tslib.es6.js\",\"import\":\"./modules/index.js\",\"default\":\"./tslib.js\"},\"./\":\"./\"}}"}},"dependency":{"name":"@dnd-kit/utilities","version":"2.0.0"},"peerDependencies":{},"dependencyDependencies":{"tslib":{"semver":"^2.0.0","resolved":"2.2.0","parents":["@dnd-kit/utilities"],"entries":[]}},"dependencyAliases":{}}