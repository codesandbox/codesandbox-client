<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>mask</string>
	</array>
	<key>name</key>
	<string>Mask</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#punctuation</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#literal-string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#decorator</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#import</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#xml_markdown</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#xml_style</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#xml_script</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#xml</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#define</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag_javascript</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag_var</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag_style</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag_markdown</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#statement</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#node_klass_id</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#node_template</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#node</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*$\n?</string>
					<key>name</key>
					<string>comment.line.double-slash.js</string>
				</dict>
			</array>
		</dict>
		<key>decorator</key>
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.js</string>
				</dict>
			</array>
		</dict>
		<key>define</key>
		<dict>
			<key>begin</key>
			<string>((define|let)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.constant</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=[&gt;;\{\}])|(?=[&gt;;\{\}])|([&gt;;\{\}])</string>
			<key>name</key>
			<string>define.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(as|extends)\b</string>
					<key>name</key>
					<string>keyword</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(,)</string>
					<key>name</key>
					<string>punctuation</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([\w_\-:]+)</string>
					<key>name</key>
					<string>entity.other.attribute-name</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\([^\)]*\))</string>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</array>
		</dict>
		<key>expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
					</dict>
					<key>name</key>
					<string>markup.italic</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#js-expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>html</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>((\{|&gt;)\s*('''|"""))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(('''|"""))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
					</dict>
					<key>name</key>
					<string>syntax.html.mask</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.html.basic</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>import</key>
		<dict>
			<key>begin</key>
			<string>(import)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(;|(?&lt;=['|"]))</string>
			<key>name</key>
			<string>import.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(sync|async|as|from)\b</string>
					<key>name</key>
					<string>keyword</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(,)</string>
					<key>name</key>
					<string>punctuation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal-string</string>
				</dict>
			</array>
		</dict>
		<key>interpolation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>other.interpolated.mask</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!\\)(~)([\w\.]+)</string>
					<key>name</key>
					<string>markup.italic</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(~\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
					</dict>
					<key>name</key>
					<string>markup.italic</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(\s*\w*\s*:)</string>
							<key>name</key>
							<string>keyword.util.mask</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#js-interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>javascript</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
					</dict>
					<key>name</key>
					<string>syntax.js.mask</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#js-block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>js-block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{</string>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>other.interpolated.mask</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#js-block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>js-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>other.interpolated.mask</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#js-expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>js-interpolation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>other.interpolated.mask</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#js-interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>klass_id</key>
		<dict>
			<key>begin</key>
			<string>([\.#][\w_\-$:]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.markup.bold.mask</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[\s\.#])</string>
			<key>name</key>
			<string>node-head.attribute.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(([\w_\-$]+)(?=[\s.#]))</string>
					<key>name</key>
					<string>entity.other.attribute-name.mask</string>
				</dict>
			</array>
		</dict>
		<key>literal-string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(''')</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(''')</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>literal-string</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-content</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(""")</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>literal-string</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-content</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(')</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>literal-string</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-content</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>literal-string</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-content</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>markdown</key>
		<dict>
			<key>begin</key>
			<string>((\{|&gt;)\s*('''|"""))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>end</key>
			<string>('''|""")</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>name</key>
			<string>syntax.markdown.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>text.html.markdown</string>
				</dict>
			</array>
		</dict>
		<key>node</key>
		<dict>
			<key>begin</key>
			<string>([^\s\.#;&gt;\{\(]+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.mask</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=[&gt;;\{\}])|(?=[&gt;;\{\}])|([&gt;;\{\}])</string>
			<key>name</key>
			<string>node.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#node_attributes</string>
				</dict>
			</array>
		</dict>
		<key>node_attribute</key>
		<dict>
			<key>name</key>
			<string>node.attribute.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
					<key>name</key>
					<string>attribute-expression</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>([\w_\-$]+)(\s*=\s*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment</string>
						</dict>
					</dict>
					<key>end</key>
					<string>([\s;&gt;\{])</string>
					<key>name</key>
					<string>attribute-key-value</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#node_attribute_value</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>([\w_\-$:]+)(?=([\s;&gt;\{])|$)</string>
					<key>name</key>
					<string>entity.other.attribute-name</string>
				</dict>
			</array>
		</dict>
		<key>node_attribute_expression</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>end</key>
			<string>(\))</string>
			<key>name</key>
			<string>meta.group.braces.round</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>js-expression</string>
				</dict>
			</array>
		</dict>
		<key>node_attribute_value</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(true|false)(?=[\s&gt;;\{])</string>
					<key>name</key>
					<string>constant.character</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([\d\.]+)(?=[\s&gt;;\{])</string>
					<key>name</key>
					<string>constant.numeric</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal-string</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((\s*)[^\s&gt;;\{]+)</string>
					<key>name</key>
					<string>string.quoted</string>
				</dict>
			</array>
		</dict>
		<key>node_attributes</key>
		<dict>
			<key>begin</key>
			<string></string>
			<key>end</key>
			<string>(?&lt;=[&gt;;\{\}])</string>
			<key>name</key>
			<string>node.attributes.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#klass_id</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#node_attribute</string>
				</dict>
			</array>
		</dict>
		<key>node_klass_id</key>
		<dict>
			<key>begin</key>
			<string>(?=[\.#])</string>
			<key>end</key>
			<string>(?&lt;=[&gt;;\{\}])|(?=[&gt;;\{\}])|([&gt;;\{\}])</string>
			<key>name</key>
			<string>node.head.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#klass_id</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#node_attribute</string>
				</dict>
			</array>
		</dict>
		<key>node_template</key>
		<dict>
			<key>begin</key>
			<string>(@[^\s\.#;&gt;\{]+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.mask</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=[&gt;;\{\}])|(?=[&gt;;\{\}])|([&gt;;\{\}])</string>
			<key>name</key>
			<string>node.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#klass_id</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#node_attribute</string>
				</dict>
			</array>
		</dict>
		<key>punctuation</key>
		<dict>
			<key>match</key>
			<string>([&gt;;\{\}])</string>
			<key>name</key>
			<string>meta.group.braces</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>statement</key>
		<dict>
			<key>begin</key>
			<string>(if|else|with|each|for|switch|case|\+if|\+with|\+each|\+for|debugger|log|script|\:import|\:template|include)(?=[\s.#;\{\}]|$)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.constant</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=[&gt;;\{\}])|(?=[&gt;;\{\}])|([&gt;;\{\}])</string>
			<key>name</key>
			<string>tag.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#node_attributes</string>
				</dict>
			</array>
		</dict>
		<key>string-content</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x[\da-fA-F]{2}|u[\da-fA-F]{4}|.)</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(.)</string>
					<key>name</key>
					<string>string</string>
				</dict>
			</array>
		</dict>
		<key>style</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter</string>
						</dict>
					</dict>
					<key>name</key>
					<string>syntax.style.mask</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.css</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>tag</key>
		<dict>
			<key>begin</key>
			<string>(a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdo|big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|dir|div|dl|dt|em|embed|fieldset|figcaption|figure|font|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|header|hgroup|hr|html|i|iframe|img|input|ins|keygen|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|u|ul|video|wbr|xmp)(?=[\s.#;\{\}]|$)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.mask</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=[&gt;;\{\}])|(?=[&gt;;\{\}])|([&gt;;\{\}])</string>
			<key>name</key>
			<string>tag.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#node_attributes</string>
				</dict>
			</array>
		</dict>
		<key>tag_javascript</key>
		<dict>
			<key>begin</key>
			<string>(slot|pipe|event|function|script)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.constant</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})|(?&lt;=\})</string>
			<key>name</key>
			<string>slot.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(static|private|public|async|self)\b</string>
					<key>name</key>
					<string>keyword</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#klass_id</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#node_attribute</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#javascript</string>
				</dict>
			</array>
		</dict>
		<key>tag_markdown</key>
		<dict>
			<key>begin</key>
			<string>(md|markdown)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.constant</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=\})|(\})</string>
			<key>name</key>
			<string>syntax.markdown.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#klass_id</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#node_attribute</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#markdown</string>
				</dict>
			</array>
		</dict>
		<key>tag_style</key>
		<dict>
			<key>begin</key>
			<string>(style)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.constant</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=\})|(\})</string>
			<key>name</key>
			<string>syntax.style.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#klass_id</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#node_attribute</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#style</string>
				</dict>
			</array>
		</dict>
		<key>tag_var</key>
		<dict>
			<key>begin</key>
			<string>(var)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.constant</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([\};\]])|(?&lt;=[\};\]])</string>
			<key>name</key>
			<string>var.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.js</string>
				</dict>
			</array>
		</dict>
		<key>xml</key>
		<dict>
			<key>begin</key>
			<string>(?=&lt;/?\s*(\w+))</string>
			<key>end</key>
			<string>(?&lt;=&lt;/\1&gt;)</string>
			<key>name</key>
			<string>syntax.html.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(&lt;mask&gt;)</string>
					<key>end</key>
					<string>(&lt;/mask&gt;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.mask</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>text.html.basic</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#xml</string>
				</dict>
			</array>
		</dict>
		<key>xml_markdown</key>
		<dict>
			<key>begin</key>
			<string>(?i)&lt;markdown[^\&gt;]*&gt;</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)&lt;/markdown[^\&gt;]*&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>name</key>
			<string>syntax.markdown.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>text.html.markdown</string>
				</dict>
			</array>
		</dict>
		<key>xml_script</key>
		<dict>
			<key>begin</key>
			<string>(?i)&lt;script[^\&gt;]*&gt;</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)&lt;/script[^\&gt;]*&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>name</key>
			<string>syntax.markdown.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.js</string>
				</dict>
			</array>
		</dict>
		<key>xml_style</key>
		<dict>
			<key>begin</key>
			<string>(?i)&lt;style[^\&gt;]*&gt;</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)&lt;/style[^\&gt;]*&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>name</key>
			<string>syntax.markdown.mask</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.css</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.mask</string>
	<key>uuid</key>
	<string>1a1ae218-751e-4eb8-8c10-4400d892a660</string>
</dict>
</plist>
