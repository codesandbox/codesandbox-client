version: 2.1

################################
# Aliases
################################

aliases:
  - &attach_deps_workspace
    at: ~/codesandbox-client

  - &build_deps_paths
    root: ~/codesandbox-client
    paths:
      - packages/codesandbox-api/dist
      - packages/common/lib
      - packages/components/lib
      - packages/deps/dist
      - packages/executors/dist
      - packages/node-services/lib
      - packages/notifications/lib
      - packages/template-icons/lib
      - packages/sse-hooks/dist
      - packages/sandpack-core/lib
      - packages/browser-eslint-rules/lib
      - packages/browser-dart-sass/lib
      - packages/vue3-browser-compiler/lib
      - packages/vue3-transpiler/lib
      - standalone-packages/codesandbox-browserfs/dist
      - standalone-packages/codesandbox-browserfs/build
      - standalone-packages/vscode-textmate/out
      - standalone-packages/vscode-textmate/node_modules

  - &restore_deps_cache
    keys:
      - v37-dependency-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - v37-dependency-cache-{{ .Branch }}
      - v37-dependency-cache

  - &save_deps_cache
    key: v37-dependency-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
    paths:
      - node_modules
      - packages/app/node_modules
      - packages/chrome-extension/node_modules
      - packages/codesandbox-api/node_modules
      - packages/components/node_modules
      - packages/template-icons/node_modules
      - packages/common/node_modules
      - packages/deps/node_modules
      - packages/executors/node_modules
      - packages/node-services/node_modules
      - packages/notifications/node_modules
      - packages/react-embed/node_modules
      - packages/sandbox-hooks/node_modules
      - packages/sse-hooks/node_modules
      - packages/sandpack-core/node_modules
      - packages/browser-eslint-rules/node_modules
      - packages/browser-dart-sass/node_modules
      - packages/vue3-browser-compiler/node_modules
      - packages/vue3-transpiler/node_modules

  - &restore_standalone_deps_cache
    keys:
      - v37-standalone-dependency-cache-{{ .Branch }}-{{ checksum
        "standalone-packages/codesandbox-browserfs/yarn.lock" }}
      - v37-standalone-dependency-cache-{{ .Branch }}
      - v37-standalone-dependency-cache

  - &save_standalone_deps_cache
    key:
      v37-standalone-dependency-cache-{{ .Branch }}-{{ checksum
      "standalone-packages/codesandbox-browserfs/yarn.lock" }}
    paths:
      - standalone-packages/codesandbox-browserfs/node_modules

  - &restore_prod_result
    key:
      v37-prod-build-result-{{ .Environment.CIRCLE_BRANCH
      }}-{{.Environment.CIRCLE_SHA1 }}

  - &save_prod_build_cache
    key:
      v37-prod-build-cache-{{ .Environment.CIRCLE_BRANCH
      }}-{{.Environment.CIRCLE_SHA1 }}
    paths:
      - packages/app/node_modules/.cache

  - &restore_prod_build_cache
    keys:
      - v37-prod-build-cache-{{ .Environment.CIRCLE_BRANCH
        }}-{{.Environment.CIRCLE_SHA1 }}
      - v37-prod-build-cache-{{ .Environment.CIRCLE_BRANCH }}-
      - v37-prod-build-cache-master-

  - &save_prod_result
    key:
      v37-prod-build-result-{{ .Environment.CIRCLE_BRANCH }}-{{
      .Environment.CIRCLE_SHA1 }}
    paths:
      - ./www
      - ./.git
      - ./Dockerfile

  - &store_test_results
    path: /tmp/test-results

  - &store_artifacts
    path: packages/app/integration-tests/tests/__image_snapshots__/__diff_output__
    destination: image_snapshot_diff

################################
# Executors
################################

executors:
  node:
    docker:
      - image: circleci/node:16.13.1
    working_directory: ~/codesandbox-client
  node-xlarge:
    docker:
      - image: circleci/node:16.13.1
    resource_class: xlarge
    working_directory: ~/codesandbox-client
  docker_machine:
    machine:
      image: ubuntu-2004:202201-02
    working_directory: ~/codesandbox-client

################################
# Commands
################################

commands:
  checkout_with_cache:
    description: 'Checkout git with a cache'
    steps:
      - restore_cache:
          keys:
            - v37-source-cache-{{ .Branch }}-{{ .Revision }}
            - v37-source-cache-{{ .Branch }}-
            - v37-source-cache-

      - checkout

      - save_cache:
          key: v37-source-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - '.git'
  build_deps:
    description: 'Install Dependencies with `yarn install`'
    steps:
      - restore_cache: *restore_deps_cache
      - restore_cache: *restore_standalone_deps_cache
      # Add extra items to yarnclean so the cache doesn't grow too big
      - run:
          name: Configure .yarnclean
          command: cat .yarnclean.ci >> .yarnclean
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache: *save_deps_cache
      - save_cache: *save_standalone_deps_cache
      - run:
          name: Build
          command: yarn build:deps
      - persist_to_workspace: *build_deps_paths
  build_prod:
    description: 'Build the Application with `yarn build:prod`'
    steps:
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - restore_cache: *restore_prod_build_cache
      - run:
          name: Build Application
          command: yarn build:prod
      - save_cache: *save_prod_build_cache
      - save_cache: *save_prod_result
  test_integrations:
    description:
      "Test Integrations with `yarn start:test` & 'yarn test:integrations'"
    steps:
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - run:
          name: Install binaries
          command:
            sudo apt-get update && 
            sudo apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 
            libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 
            libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 
            libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 
            libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release 
            xdg-utils wget libgbm-dev
      - run:
          name: Install puppeteer
          command: cd ~/ && yarn add puppeteer@18.1.0 -DW
      - run:
          name: Start Test Server
          command: yarn start:test
          background: true
      - run:
          name: Setup BrowserStack local environment
          command:
            '[ -n "$BROWSER_STACK_KEY" ] &&
            ./packages/app/integration-tests/BrowserStackLocal --key
            $BROWSER_STACK_KEY || true'
          background: true
      - run:
          name: Test Integrations
          command: |
            sleep 15
            yarn test:integrations --ci --testResultsProcessor="jest-junit"
          environment:
            JEST_JUNIT_OUTPUT: '/tmp/test-results/js-test-results.xml'
      - store_test_results: *store_test_results
      - store_artifacts: *store_artifacts
  test_visual_regressions:
    description: "Test Chromatic with 'yarn chromatic'"
    steps:
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - run:
          command: yarn chromatic
  test_jest:
    description: 'Test with `yarn test`'
    steps:
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - run:
          name: Test
          command: yarn test:ci
          environment:
            JEST_JUNIT_OUTPUT: 'reports/junit/js-tests-results.xml'
  yarn_lint:
    description: 'Lint with `yarn lint`'
    steps:
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - run:
          name: Lint
          command: yarn lint
  yarn_typecheck:
    description: 'Lint with `yarn typecheck`'
    steps:
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - run:
          name: Typecheck
          command: yarn typecheck
  docker_cache:
    description: 'Cache, Sign In, Create, and Push Docker Image'
    parameters:
      user:
        type: string
        default: '$DOCKER_USER'
      password:
        type: string
        default: '$DOCKER_PWD'
    steps:
      - restore_cache: *restore_prod_result
      - run:
          name: Docker Sign In
          command:
            '[ -n "<< parameters.user >>" ] && echo << parameters.password >> |
            docker login -u << parameters.user >> --password-stdin || true'
      - run:
          name: Create DockerIgnore
          command: echo '**\n!www' > .dockerignore
      - run:
          name: Create Image
          command:
            '[ -n "<< parameters.user >>" ] && docker build -t
            codesandbox/client:${CIRCLE_SHA1:0:7} . || true'
      - run:
          name: Push Image
          command:
            '[ -n "<< parameters.user >>" ] && docker push
            codesandbox/client:${CIRCLE_SHA1:0:7} || true'

################################
# Jobs
################################

jobs:
  build-deps:
    executor: node-xlarge
    steps:
      - checkout_with_cache
      - build_deps
  build-prod:
    executor: node-xlarge
    steps:
      - checkout_with_cache
      - build_prod
  test-integrations:
    executor: node-xlarge
    parallelism: 3
    steps:
      - checkout_with_cache
      - test_integrations
  test-visual-regressions:
    executor: node
    steps:
      - checkout_with_cache
      - test_visual_regressions
  test-jest:
    executor: node-xlarge
    steps:
      - checkout_with_cache
      - test_jest
  lint:
    executor: node
    steps:
      - checkout_with_cache
      - yarn_lint
  typecheck:
    executor: node
    steps:
      - checkout_with_cache
      - yarn_typecheck
  create-docker-image:
    executor: docker_machine
    steps:
      - docker_cache
  deploy-to-production:
    executor: node
    environment:
      ENVIRONMENT: prod
    steps:
      - checkout_with_cache
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - run:
          name: Mark Sentry release
          command: node packages/app/scripts/sentry-create-release.js
      - run:
          name: Deploy Image
          command: node packages/app/scripts/deploy.js
      - run:
          name: Deploy Sentry release
          command: node packages/app/scripts/sentry-deploy-release.js
  deploy-to-staging:
    executor: node
    environment:
      ENVIRONMENT: staging
    steps:
      - checkout_with_cache
      - restore_cache: *restore_deps_cache
      - attach_workspace: *attach_deps_workspace
      - run:
          name: Deploy Image
          command: node packages/app/scripts/deploy.js

################################
# Workflows
################################

workflows:
  version: 2
  build-and-test:
    jobs:
      - build-deps
      - test-integrations:
          requires:
            - build-deps
      - test-visual-regressions:
          requires:
            - build-deps
      - typecheck:
          requires:
            - build-deps
      - test-jest:
          requires:
            - build-deps
      - lint:
          requires:
            - build-deps
      - build-prod:
          requires:
            - build-deps
      - create-docker-image:
          requires:
            - build-prod
      - deploy-to-production:
          requires:
            - create-docker-image
            - lint
            - typecheck
            - test-integrations
            - test-jest
            - test-visual-regressions
          filters:
            branches:
              only:
                - master
      - deploy-staging-approval:
          type: approval
          filters:
            branches:
              ignore:
                - master
      - deploy-to-staging:
          requires:
            - deploy-staging-approval
            - create-docker-image
          filters:
            branches:
              ignore:
                - master
